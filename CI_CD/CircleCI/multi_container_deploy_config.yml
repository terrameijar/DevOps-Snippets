version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:current

    working_directory: ~/app

    steps:
      - checkout
      - setup_remote_docker

      # Install development dependencies
      - run:
          name: Install Dependencies
          command: docker build -t $DOCKERHUB_USERNAME/react-test -f ./client/Dockerfile.dev ./client

      # Run Tests
      - run:
          name: Run Tests
          command: docker run $DOCKERHUB_USERNAME/react-test npm test -- --coverage

  deploy_to_dockerhub_and_aws:
    docker:
      - image: cimg/aws:2023.12

    working_directory: ~/app

    steps:
      - checkout
      - setup_remote_docker

      # Build and push to DockerHub
      - run:
          name: Build and push to DockerHub
          command: |
            docker build -t $DOCKERHUB_USERNAME/multi-client ./client
            docker build -t $DOCKERHUB_USERNAME/multi-nginx ./nginx
            docker build -t $DOCKERHUB_USERNAME/multi-server ./server
            docker build -t $DOCKERHUB_USERNAME/multi-worker ./worker

            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $DOCKERHUB_USERNAME/multi-client
            docker push $DOCKERHUB_USERNAME/multi-nginx
            docker push $DOCKERHUB_USERNAME/multi-server
            docker push $DOCKERHUB_USERNAME/multi-worker

      # Install ElasticBeanstalk CLI and deploy to AWS
      - run:
          name: Install EB Deployment Dependencies
          command: python3 -m pip install --upgrade --user awsebcli

      - run:
          name: Deploy to ElasticBeanstalk
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY
            aws configure set aws_secret_access_key $AWS_SECRET_KEY
            aws configure set region $AWS_REGION
            eb init multi-docker --region $AWS_REGION --platform "Docker"
            eb use Multi-docker-env
            eb deploy

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy_to_dockerhub_and_aws:
          requires:
            - build
          filters:
            branches:
              only: main
